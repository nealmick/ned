name: Multi-Platform Build
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  create-tag:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.tag.outputs.timestamp }}
    steps:
      - name: Generate timestamp
        id: tag
        run: |
          TS=$(date -u +'%Y.%m.%d.%H%M%S')
          echo "timestamp=v${TS}"
          echo "timestamp=v${TS}" >> $GITHUB_OUTPUT

  macos-arm:
    runs-on: macos-14
    needs: create-tag
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install dependencies
        run: brew install clang-format cmake llvm glfw glew pkg-config
      
      - name: Build
        run: ./build.sh
      
      - name: Package
        run: |
          ./pack-mac.sh
          mv Ned.zip "Ned-macOS-ARM64-${{ needs.create-tag.outputs.timestamp }}.zip"
      
      - name: Upload ARM Release
        uses: softprops/action-gh-release@v1
        with:
          files: Ned-macOS-ARM64-*.zip
          tag_name: ${{ needs.create-tag.outputs.timestamp }}
          name: "Build ${{ needs.create-tag.outputs.timestamp }}"
          generate_release_notes: true
          draft: false
          prerelease: false

  macos-intel:
    runs-on: macos-13
    needs: create-tag
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install dependencies
        run: brew install clang-format cmake llvm glfw glew pkg-config
      
      - name: Build
        run: |
          export MACOSX_DEPLOYMENT_TARGET=10.15
          ./build.sh
      
      - name: Package
        run: |
          ./pack-mac.sh
          mv Ned.zip "Ned-macOS-Intel-${{ needs.create-tag.outputs.timestamp }}.zip"
      
      - name: Upload Intel Release
        uses: softprops/action-gh-release@v1
        with:
          files: Ned-macOS-Intel-*.zip
          tag_name: ${{ needs.create-tag.outputs.timestamp }}
          name: "Build ${{ needs.create-tag.outputs.timestamp }}"
          draft: false
          prerelease: false

  debian:
    runs-on: ubuntu-22.04
    needs: create-tag
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake libglfw3-dev libglew-dev libgtk-3-dev \
            pkg-config clang libcurl4-openssl-dev clang-format mesa-utils
      
      - name: Build
        run: |
          export CC=clang
          export CXX=clang++
          ./build.sh
      
      - name: Package
        run: |
          chmod +x pack-deb.sh
          ./pack-deb.sh
          mv Ned_*.deb "Ned-Debian-${{ needs.create-tag.outputs.timestamp }}.deb"
      
      - name: Upload Debian Release
        uses: softprops/action-gh-release@v1
        with:
          files: Ned-Debian-*.deb
          tag_name: ${{ needs.create-tag.outputs.timestamp }}
          name: "Build ${{ needs.create-tag.outputs.timestamp }}"
          draft: false
          prerelease: false

  windows:
    runs-on: windows-2022
    needs: create-tag
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v2
      - name: Install dependencies and build
        run: |
          .\build-win-ci.bat
      
      - name: Package
        run: |
          Compress-Archive -Path "ned-release\*" -DestinationPath "Ned-Windows-x64-${{ needs.create-tag.outputs.timestamp }}.zip"
      
      - name: Upload Windows Release
        uses: softprops/action-gh-release@v1
        with:
          files: Ned-Windows-x64-*.zip
          tag_name: ${{ needs.create-tag.outputs.timestamp }}
          name: "Build ${{ needs.create-tag.outputs.timestamp }}"
          draft: false
          prerelease: false
